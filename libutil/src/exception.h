/*
# PostgreSQL Database Modeler (pgModeler)
# Sub-project: libutil library
# Classe: Exception
# Creation date: 10/07/2006
#
# Copyright 2006-2012 - Raphael Ara√∫jo e Silva <rkhaotix@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# The complete text of GPLv3 is at LICENSE file on source code root directory.
# Also, you can get the complete GNU General Public License at <http://www.gnu.org/licenses/>
*/
#ifndef EXCEPTION_H
#define EXCEPTION_H

#include <QObject>
#include <exception>
#include <QString>
#include <signal.h>
#include <iostream>
#include <vector>
#include <deque>

using namespace std;

const int ERROR_COUNT=175;

/*
 ErrorType enum format: ERR_[LIBRARY]_[[OPERATION_CODE][ERROR_CODE]] where:

 OPERATION_CODE is composed as:
   INS=Insertion
   ASG=Assignment
   REF=Reference
   REM=Removing
   RES=Restoration
   OBT=Obtaining
*/

enum ErrorType {
 ERR_CUSTOM,
 //Insufficient memory space to allocate the object!
 ERR_GLOBAL_OBJBADALOC,
 ERR_PGMODELER_ATRPSDTIPOCOL,
 ERR_PGMODELER_ATRCOMPRIMZERO,
 ERR_PGMODELER_ATRPRECISAOINV,
 ERR_PGMODELER_ATRPRECTIPOTIMEINV,
 ERR_PGMODELER_ATRCOLNAOALOC,
 ERR_PGMODELER_REFCOLIDXINV,
 ERR_PGMODELER_ATROBJNAOALOC,
 ERR_PGMODELER_ATRESQNAOALOC,
 ERR_PGMODELER_ATROBJDEFSQLINV,
 ERR_PGMODELER_ATROBJDUPLIC,
 ERR_PGMODELER_ATROBJDUPLICCONT,
 ERR_PGMODELER_ATROBJTIPOINV,
 ERR_PGMODELER_REMOBJTIPOINV,
 ERR_PGMODELER_OBTOBJTIPOINV,
 ERR_PGMODELER_ATRNOMEVAZIOTPRET,
 ERR_PGMODELER_INSPARAMDUPLIC,
 ERR_PGMODELER_INSTPRETDUPLIC,
 ERR_PGMODELER_REFPARAMIDXINV,
 ERR_PGMODELER_REFEVENTOGATINV,
 ERR_PGMODELER_ATRCOLINVGATILHO,
 ERR_PGMODELER_ATRFUNCNAOALOC,
 ERR_PGMODELER_ATRFUNCGATINV,
 ERR_PGMODELER_ATRFUNCNUMPARAMINV,
 ERR_PGMODELER_ATRFUNCLINGINV,
 ERR_PGMODELER_ATRTABNAOALOC,
 ERR_PGMODELER_REFARGIDXINV,
 ERR_PGMODELER_INSCOLDUPLIC,
 ERR_PGMODELER_ATRNOMEOBJVAZIO,
 ERR_PGMODELER_ATRNOMEOBJINV,
 ERR_PGMODELER_ATRESQTIPOINV,
 ERR_PGMODELER_ATRESPTABTIPOINV,
 ERR_PGMODELER_ATRESPTABOBJINV,
 ERR_PGMODELER_ATRESPTABRESTTIPOINV,
 ERR_PGMODELER_ATRPAPELTIPOINV,
 ERR_PGMODELER_ATRDONOOBJINV,
 ERR_PGMODELER_REFFUNCTIPOINV,
 ERR_PGMODELER_REFARGOPTIPOINV,
 ERR_PGMODELER_REFOPTIPOINV,
 ERR_PGMODELER_ATROPPAPELTIPOINV,
 ERR_PGMODELER_REFPAPELINV,
 ERR_PGMODELER_INSITEMPAPELDUPLIC,
 ERR_PGMODELER_REFREDUNDANTEPAPEIS,
 ERR_PGMODELER_ATRMEBROPROPPAPEL,
 ERR_PGMODELER_REFPAPELIDXINV,
 ERR_PGMODELER_INSCMDNULO,
 ERR_PGMODELER_REFCMDIDXINV,
 ERR_PGMODELER_HERANCATABINV,
 ERR_PGMODELER_ATROBJRELAC,
 ERR_PGMODELER_ATRESQDIFSEQ,
 ERR_PGMODELER_ATRESQVALORINV,
 ERR_PGMODELER_ATRESQVALORMININV,
 ERR_PGMODELER_ATRESQVALORINIINV,
 ERR_PGMODELER_ATRESQINCNULO,
 ERR_PGMODELER_ATRESQCACHENULO,
 ERR_PGMODELER_ATRESQDIFTAB,
 ERR_PGMODELER_ATRDONODIFTAB,
 ERR_PGMODELER_ATRCOLPOSINDEF,
 ERR_PGMODELER_ATRCOLPOSNAORELAC,
 ERR_PGMODELER_REFROTIDXINV,
 ERR_PGMODELER_ALOCOBJTIPOINV,
 ERR_PGMODELER_ATRFUNCRETINV,
 ERR_PGMODELER_ATRFUNCPARAMINV,
 ERR_PGMODELER_ATRLINGNAOALOC,
 ERR_PGMODELER_ATRLINGTIPOINV,
 ERR_PGMODELER_REFTIPOIDXINV,
 ERR_PGMODELER_ATRTIPONULO,
 ERR_PGMODELER_ATRTIPOINVOBJ,
 ERR_PGMODELER_ATRNOMEDIRVAZIO,
 ERR_PGMODELER_OBTQTDTIPOINV,
 ERR_PGMODELER_INSATRIBTIPODUPLIC,
 ERR_PGMODELER_INSATRIBTIPOINV,
 ERR_PGMODELER_INSENUMTIPODUPLIC,
 ERR_PGMODELER_INSENUMTIPOINV,
 ERR_PGMODELER_REFATRIBTIPOIDXINV,
 ERR_PGMODELER_REFENUMTIPOIDXINV,
 ERR_PGMODELER_ATRCONFTIPOINV,
 ERR_PGMODELER_INSTIPODUPLIC,
 ERR_PGMODELER_ATROPFUNCAGRARGINV,
 ERR_PGMODELER_ATROPFUNCAGTIPOSINV,
 ERR_PGMODELER_ATRNOMERESERV,
 ERR_PGMODELER_FUNCCONFIGINV,
 ERR_PGMODELER_ATRIDUSUARIOINV,
 ERR_PGMODELER_ATRVALORINVNUMEST,
 ERR_PGMODELER_INSELEMDUPLIC,
 ERR_PGMODELER_REFELEMIDXINV,
 ERR_PGMODELER_REFOBJIDXINV,
 ERR_PGMODELER_REMOBJNAOALOC,
 ERR_PGMODELER_REMOBJREFERDIR,
 ERR_PGMODELER_REMOBJREFERIND,
 ERR_PGMODELER_OPROBJTIPOINV,
 ERR_PGMODELER_REFOBJTIPOINV,
 ERR_PGMODELER_OPROBJNAOALOC,
 ERR_PGMODELER_RELTABSEMPK,
 ERR_PGMODELER_TIPORELNAOIMPL,
 ERR_PGMODELER_ATREXPRINV,
 ERR_PGMODELER_ATRPKEXISTETAB,
 ERR_PGMODELER_RELIDENTINV,
 ERR_PGMODELER_RELINVCOLDUPLIC,
 ERR_PGMODELER_RELINVCOLSINCOMP,
 ERR_PGMODELER_ATROBJRELINV,
 ERR_PGMODELER_ATRFKRELAC,
 ERR_PGMODELER_REFOBJINEXISTE,
 ERR_PGMODELER_REFTIPOUSRINV,
 ERR_PGMODELER_ATRTAMMAXINVLISTA,
 ERR_PGMODELER_ARQNAOGRAVADO,
 ERR_PGMODELER_ARQNAOGRAVADODEFINV,
 ERR_PGMODELER_RELEXISTEMODELO,
 ERR_PGMODELER_INSRELGERAREDUNDANCIA,
 ERR_PGMODELER_REFCOLUNAINVTABELA,
 ERR_PGMODELER_ALOCPKFORMAINVALIDA,
 ERR_PGMODELER_REFPRIVLEGIOIDXINV,
 ERR_PGMODELER_INSPAPELDUPLICPERM,
 ERR_PGMODELER_ATRPRIVILEGIOOBJINV,
 ERR_PGMODELER_ATRPERMISSAODUPLIC,
 ERR_PGMODELER_PERMREFOBJINEXISTE,
 ERR_PGMODELER_OBJSEMESQUEMA,
 ERR_PGMODELER_ATRESPTABDIRDUPLIC,
 ERR_PGMODELER_ATRDIMENSAOINVDOMINIO,
 ERR_PGMODELER_ATRCORPOFUNCLINGC,
 ERR_PGMODELER_ATRBIBLIOFUNCLINGDIFC,
 ERR_PGMODELER_ATROPERCOMUTINV,
 ERR_PGMODELER_ATROPERNEGINV,
 ERR_PGMODELER_TIPOUSRAUTOREF,
 ERR_PGMODELER_ATRELEMENTOINVTIPO,
 ERR_PGMODELER_ATRALINHAMENTOINVTIPO,
 ERR_PGMODELER_ATRNOMEINVTABRELNN,
 ERR_PGMODELER_PKESPTIPORELINV,
 ERR_PGMODELER_ATRSUFIXORELINV,
 ERR_PGMODELERUI_OPROBJINCRELACAO,
 ERR_PGMODELERUI_REMOBJPROTEGIDO,
 ERR_PGMODELERUI_REDECLGRUPODESTAQUE,
 ERR_PGMODELERUI_DEFGRUPOLOCALINV,
 ERR_PGMODELERUI_DEFGRUPONAODECL,
 ERR_PGMODELERUI_DEFGRUPOSEMELEM,
 ERR_PGMODELERUI_DEFGRUPODUPLICADA,
 ERR_PGMODELERUI_GRUPODECLNAODEF,
 ERR_PGMODELERUI_REFCOLTABOBJIDXINV,
 ERR_PGMODELERUI_REFLINTABOBJIDXINV,
 ERR_PGMODELERUI_OPROBJRESERVADO,
 ERR_PGMODELERUI_CONFFUNCINVALIDAOBJ,
 ERR_PGMODELERUI_TIPOSQLINDEFREFVISAO,
 ERR_PGMODELERUI_RESTPKFKSEMCOLUNAS,
 ERR_PGMODELERUI_CONFNAOCARREGADA,
 ERR_PGMODELERUI_CONFPADRAONAORESTAURADA,
 ERR_PGMODELERUI_FALHAEXPORTACAO,
 ERR_PGMODELERUI_PLUGINNAOCARREGADO,
 ERR_PGMODELERUI_PLUGINSNAOCARREGADOS,
 ERR_PARSERS_SINTAXEINV,
 ERR_PARSERS_CONDICIONALINV,
 ERR_PARSERS_ATRIBUTODESC,
 ERR_PARSERS_METACHARINV,
 ERR_PARSERS_ATRIBVALORNULO,
 ERR_PARSERS_ATRIBBUFXMLVAZIO,
 ERR_PARSERS_ARQDIRNAOCARREGADO,
 ERR_PARSERS_ATRIBARQDTDVAZIO,
 ERR_PARSERS_ATRIBNOMEDTDVAZIO,
 ERR_PARSERS_LIBXMLERR,
 ERR_PARSERS_OPRARVELEMNAOALOC,
 ERR_PARSERS_ARQMODELOINV,
 ERR_PARSERS_OPRELEMNAOALOC,
 ERR_PARSERS_OPRELEMINVARVDOC,
 ERR_CONEXBD_ATRPARAMINVCONEX,
 ERR_CONEXBD_OPRCONEXNAOALOC,
 ERR_CONEXBD_CONEXSEMPARAMCONFIG,
 ERR_CONEXBD_CONEXNAOESTABELECIDA,
 ERR_CONEXBD_ATRRESSQLNAOALOC,
 ERR_CONEXBD_SGBDRESPINCOMP,
 ERR_CONEXBD_SGBDERROFATAL,
 ERR_CONEXBD_COMANDOSQLVAZIO,
 ERR_CONEXBD_REFCOLTUPLAIDXINV,
 ERR_CONEXBD_REFCOLTUPLANOMEINV,
 ERR_CONEXBD_REFTUPLANAOEXISTE,
 ERR_CONEXBD_CMDSQLNAOEXECUTADO
};

class Exception {
 private:
  /* Stores other exceptions before raise the 'this' exception.
     This structure can be used to simulate a stack trace to improve the debug */
  deque<Exception> exceptions;

  //Stores the error messages and codes (names of errors) in string format
  static QString messages[ERROR_COUNT][2];

  //Constants used to access the error details
  static const unsigned ERROR_CODE=0,
                        ERROR_MESSAGE=1;

  //Error type related to the exception
  ErrorType error_type;

  //Formated error message
  QString error_msg,
        /* Holds the class name and method which was
           triggered the exception. For this to be possible, at the time
           instantiation of this class the  G++ macro __ PRETTY_FUNCTION__
           must be passed. This macro contains the format [RETURN][CLASS]::[METHOD][PARAMS] */
         method,

         //File where the exception was generated (Macro __ FILE__)
         file,

         /* Additional information (optional) may store any other
            type of information that is interesting on attempt to resolve the error */
         extra_info;

  //Line of file where the exception were generated (Macro __LINE__)
  int line;

  //Configures the basic attributes of exception
  void configureException(const QString &msg, ErrorType error_type, const QString &method, const QString &file, int line, const QString &extra_info);

  //Adds a exception to the list of exceptions
  void addException(Exception &exception);

 public:
  Exception(void);
  Exception(const QString &msg, const QString &method, const QString &file, int line, Exception *exception=NULL, const QString &extra_info="");
  Exception(const QString &msg, ErrorType error_type, const QString &method, const QString &file, int line, Exception *exception=NULL, const QString &extra_info="");
  Exception(ErrorType error_type, const QString &method, const QString &file, int line, Exception *exception=NULL, const QString &extra_info="");
  Exception(ErrorType error_type, const QString &method, const QString &file, int line, vector<Exception> &exceptions, const QString &extra_info="");
  Exception(const QString &msg, const QString &method, const QString &file, int line, vector<Exception> &exceptions, const QString &extra_info="");
  ~Exception(void){}
  QString getErrorMessage(void);
  static QString getErrorMessage(ErrorType error_type);
  static QString getErrorCode(ErrorType error_type);
  QString getMethod(void);
  QString getFile(void);
  QString getLine(void);
  ErrorType getErrorType(void);
  QString getExtraInfo(void);

  //Gets the full exception stack
  void getExceptionsList(deque<Exception> &list);

  //Gets the exception stack in a formatted text
  QString getExceptionsText(void);
};

#endif
