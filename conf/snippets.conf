<?xml version="1.0" encoding="UTF-8" ?>
<!--
  CAUTION: Do not modify this file directly on it's code unless you know what you are doing.
           Unexpected results may occur if the code is changed deliberately.
-->
<snippets>
    <snippet id="agg_create" label="Create aggregate" object="aggregate" parsable="true" placeholders="true">
<![CDATA[[CREATE AGGREGATE ] {name} $sp ({types}) $sp ( $br
[  SFUNC = ] {transition}, $br
[  STYPE = ] {state-type} $br
$ob [ , FINALFUNC = ] {final} $sp $cb $br
$ob [ , INITCOND = ] {initial-cond} $sp $cb $br
$ob [ , SORTOP = ] {sort-op} $sp $cb $br
)]]>
    </snippet>
       
    <snippet id="cast_create" label="Create cast" object="cast" parsable="true" placeholders="true">
<![CDATA[[ CREATE CAST (] {source-type} [ AS ] {destiny-type}) $br
$ob [ WITH FUNCTION ] {function} [ | WITHOUT FUNCTION | INOUT ] $cb $br
$ob [ AS ASSIGNMENT | AS IMPLICIT ] $cb]]>
    </snippet>
    
    <snippet id="coll_create" label="Create collation" object="collation" parsable="true" placeholders="true">
<![CDATA[[CREATE COLLATION ] {name} ( $br
$ob [ LOCALE = ] {locale} [, ] $cb $br
$ob [ LC_COLLATE = ] {lc-collate}[, ] $cb $br
$ob [ LC_CTYPE = ] {lc-ctype} $sp $cb
)]]>
    </snippet>
    
    <snippet id="coll_create2" label="Create collation from another" object="collation" parsable="true" placeholders="true">
<![CDATA[[CREATE COLLATION ] {name} [ FROM ] {another-collation}]]>
    </snippet>
        
    <snippet id="conv_create" label="Create conversion" object="conversion" parsable="true" placeholders="true">
<![CDATA[[CREATE ] $ob $sp DEFAULT $sp $cb [ CONVERSION ] {name}
[ FOR  ] {src-encoding} [ TO ] {dst-encoding} [ FROM ] {function}]]>
    </snippet>

    <snippet id="db_create" label="Create database" object="database" parsable="true" placeholders="true">
<![CDATA[[CREATE DATABASE ] {name} [ WITH] $br
$ob [ OWNER = ] {owner} $sp $cb $br
$ob [ TEMPLATE = ] {template} $sp $cb $br
$ob [ ENCODING = ] {encoding} $sp $cb $br
$ob [ LC_COLLATE = ] {lc-collate} $sp $cb $br
$ob [ LC_CTYPE = ] {lc-ctype} $sp $cb $br
$ob [ TABLESPACE = ] {tablespace} $sp $cb $br
$ob [ CONNECTION LIMIT = ] {connlimit} $sp $cb]]>
    </snippet>
    
    <snippet id="db_alterconnlim" label="Alter database connection limit" object="database" parsable="true" placeholders="true">
<![CDATA[[ALTER DATABASE ] {name} [ WITH CONNECTION LIMIT ] {connlimit}]]>
    </snippet>

    <snippet id="dom_create" label="Create domain" object="domain" parsable="true" placeholders="true">
<![CDATA[[CREATE DOMAIN ] {name} [ AS ] {type} $br
$ob [ COLLATE ] {collation} $cb $br
$ob [ DEFAULT ] {default-value} $cb $br
$ob [ CONSTRAINT ] {constraint} $cb $br
$ob [ NOT NULL | NULL | CHECK ] ({expression}) $cb
]]>
    </snippet>
        
    <snippet id="dom_setdefault" label="Set domain's default value" object="domain" parsable="true" placeholders="true">
<![CDATA[[ALTER DOMAIN ] {name} [ SET DEFAULT ] {expression}]]>
    </snippet>

    <snippet id="dom_dropdefault" label="Drop domain's default value" object="domain" parsable="true" placeholders="true">
<![CDATA[[ALTER DOMAIN ] {name} [ DROP DEFAULT]]]>
    </snippet>
    
    <snippet id="dom_setnotnull" label="Set domain's not null constraint" object="domain" parsable="true" placeholders="true">
<![CDATA[[ALTER DOMAIN ] {name} [ SET NOT NULL]]]>
    </snippet>

    <snippet id="dom_dropnotnull" label="Drop domain's not null constraint" object="domain" parsable="true" placeholders="true">
<![CDATA[[ALTER DOMAIN ] {name} [ DROP NOT NULL]]]>
    </snippet>

    <snippet id="dom_addcheck" label="Add domain's check constraint" object="domain" parsable="true" placeholders="true">
<![CDATA[[ALTER DOMAIN ] {name} [ ADD CONSTRAINT ] {constraint} $br
[CHECK (] {expression} [) ] $ob [ NOT VALID ] $cb
]]>
    </snippet>

    <snippet id="dom_dropconstr" label="Drop domain's constraint" object="domain" parsable="true" placeholders="true">
<![CDATA[[ALTER DOMAIN ] {name} [ DROP CONSTRAINT IF EXISTS ] {constraint} $sp $ob [ RESTRICT | CASCADE ] $cb]]>
    </snippet>
    
    <snippet id="dom_renconstr" label="Rename domain's constraint" object="domain" parsable="true" placeholders="true">
<![CDATA[[ALTER DOMAIN ] {name} [ RENAME CONSTRAINT ] {constraint} [ TO ] {new-name}]]>
    </snippet>

    <snippet id="dom_validconstr" label="Validate domain's constraint" object="domain" parsable="true" placeholders="true">
<![CDATA[[ALTER DOMAIN ] {name} [ VALIDATE CONSTRAINT ] {constraint}]]>
    </snippet>
   
    <snippet id="evnt_create" label="Create event trigger" object="eventtrigger" parsable="true" placeholders="true">
<![CDATA[[CREATE EVENT TRIGGER ] {name} $br
[ ON ] {event} $br
$ob [ WHEN TAG IN (] {values}) $sp $cb $br
[ EXECUTE PROCEDURE ] {function}]]>
    </snippet>
    
    <snippet id="evnt_enable" label="Enable event trigger" object="eventtrigger" parsable="true" placeholders="true">
<![CDATA[[ALTER EVENT TRIGGER ] {name} [ ENABLE ] $ob [ REPLICA | ALWAYS ] $cb]]>
    </snippet>
    
    <snippet id="evnt_disable" label="Disable event trigger" object="eventtrigger" parsable="true" placeholders="true">
<![CDATA[[ALTER EVENT TRIGGER ] {name} [ DISABLE]]]>
    </snippet>    
    
          
    <snippet id="ext_create" label="Create extension" object="extension" parsable="true" placeholders="true">
<![CDATA[[CREATE EXTENSION IF NOT EXISTS ] {name} [ WITH] $br
$ob [ SCHEMA ] {schema} $sp $cb $br
$ob [ VERSION ] '{cur-version}' $sp $cb $br
$ob [ FROM ] '{old-version}' $sp $cb]]>
    </snippet>

    <snippet id="ext_update" label="Update extension" object="extension" parsable="true" placeholders="true">
<![CDATA[[ALTER EXTENSION ] {name} [ UPDATE ] $ob [ TO ] $ob $sp '{new-version}' $sp $cb]]>
    </snippet>
    

    <snippet id="func_create" label="Create a C based function" object="function" parsable="true" placeholders="true">
<![CDATA[CREATE]]>
    </snippet>
    
    <snippet id="func_c" label="Create a C based function" object="function" parsable="true" placeholders="true">
<![CDATA[[CREATE OR REPLACE FUNCTION ] {name} $sp ({arg-types}) $br
    $ob [ RETURNS ] {return-type} $br
    [LANGUAGE c ] $br
    %if ({window}=="true") %then WINDOW $br %end
    %if {function-type} %then {function-type} $br %end
    %if ({leakproof}=="true") %then LEAKPROOF $br %end
    %if {behavior-type} %then {behavior-type} $br %end
    %if {security-type} %then  {security-type} $br %end
    %if {execution-cost} %then [COST ] {execution-cost} $br %end
    %if {row-amount} %then [ROWS ] {row-amount} $br %end
    [AS ] '{library}' [, ] '{definition}']]>
    </snippet>

    <snippet id="func_sql" label="Create a SQL based function" object="function" parsable="true" placeholders="true">
<![CDATA[[CREATE]]>
    </snippet>

    <snippet id="func_plpgsql" label="Create a SQL based function" object="function" parsable="true" placeholders="true">
<![CDATA[CREATE]]>
    </snippet>    
    
    
   
    
    
    <snippet id="obj_rename" label="Rename object" object="general" parsable="true" placeholders="true">
<![CDATA[[ALTER ] {sql-object} $sp {signature} [ RENAME TO ] {new-name}]]>
    </snippet>
    
    <snippet id="set_owner" label="Set object's owner" object="general" parsable="true" placeholders="true">
<![CDATA[[ALTER ] {sql-object} $sp {signature} [ OWNER TO ] {owner}]]>
    </snippet>    

    <snippet id="set_schema" label="Set object's schema" object="general" parsable="true" placeholders="true">
<![CDATA[[ALTER ] {sql-object} $sp {signature} [ SET SCHEMA ] {schema}]]>
    </snippet>

    <snippet id="set_schema" label="Set object's schema" object="general" parsable="true" placeholders="true">
<![CDATA[[ALTER ] {sql-object} $sp {signature} [ SET SCHEMA ] {schema}]]>
    </snippet>

    <snippet id="set_tablespace" label="Set object's tablespace" object="general" parsable="true" placeholders="true">
<![CDATA[[ALTER ] {sql-object} $sp {signature} [ SET TABLESPACE ] {tablespace}]]>
    </snippet>
    
</snippets>
